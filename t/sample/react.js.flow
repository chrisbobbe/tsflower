/* @flow
 * @generated by TsFlower
 */
import React, { Component, Component as Component2 } from "react";
import * as React2 from "react";

var reactComponent: {|
    a: Component<{...}>,
    b: React.Component<{...}>,
    b: React2.Component<{...}>,
|};

declare class ReactComponentTest extends Component2<{...}> {}
declare class ReactComponentTest extends React.Component<{...}> {}
declare class ReactComponentTest extends React2.Component<{...}> {}

type AProps = {|
    x: number,
    y: string,
|};

declare class A extends Component<AProps> {}
declare class AA extends React.Component<AProps> {}
declare class AAA extends React2.Component<AProps> {}

var reactElement: {|
    a2: React$Element<React$ElementType>,
    a3: React$Element<React$ElementType>,
    b2: React$Element<React$ComponentType<AProps>>,
    b3: React$Element<React$ComponentType<AProps>>,
    c2: React$Element<"div">,
    c3: React$Element<"div">,
|};

var reactNode: React$Node;
var refAttributes: {| a: $FlowFixMe/*  React.RefAttributes *//* tsflower-unimplemented: React.RefAttributes */ |};
var jsx: {| element: React$Element<any> |};
