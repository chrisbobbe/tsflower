/* @flow
 * @generated by TsFlower
 */
import * as $tsflower_import$_$tsflower_2f_subst_2f_react from "tsflower/subst/react";
import { Component, Component as Component2 } from "react";
import React2 from "react";
import * as React from "react";
var jsxElementConstructor: $tsflower_import$_$tsflower_2f_subst_2f_react.JSXElementConstructor<{ x: number, ... }>;
var refObject: $tsflower_import$_$tsflower_2f_subst_2f_react.RefObject<number>;
var refCallback: $tsflower_import$_$tsflower_2f_subst_2f_react.RefCallback<number>;
var ref: $tsflower_import$_$tsflower_2f_subst_2f_react.Ref<number>;
var ref2: $tsflower_import$_$tsflower_2f_subst_2f_react.Ref<React.Component<{...}>>;
var legacyRef: $tsflower_import$_$tsflower_2f_subst_2f_react.LegacyRef<boolean>;
var componentState: $tsflower_import$_$tsflower_2f_subst_2f_react.ComponentState;
var refAttributes: $tsflower_import$_$tsflower_2f_subst_2f_react.RefAttributes<React.Component<{...}>>;

var reactElement: {
    a2: React$Element<React$ElementType>,
    a3: React$Element<React$ElementType>,
    b2: React$Element<React$ComponentType<AProps>>,
    b3: React$Element<React$ComponentType<AProps>>,
    c2: React$Element<"div">,
    c3: React$Element<"div">,
    ...
};

var cElement1: $tsflower_import$_$tsflower_2f_subst_2f_react.CElement<{ x: number, ... }>;

var cElement2: $tsflower_import$_$tsflower_2f_subst_2f_react.CElement<{
    x: number,
    y: string,
    z: boolean,
    ...
}, A>;

var componentElement1: $tsflower_import$_$tsflower_2f_subst_2f_react.ComponentElement<{ x: number, ... }>;

var componentElement2: $tsflower_import$_$tsflower_2f_subst_2f_react.ComponentElement<{
    x: number,
    y: string,
    z: boolean,
    ...
}, A>;

var reactNode: $tsflower_import$_$tsflower_2f_subst_2f_react.ReactNode;

var context1: {
    providerProps: $tsflower_import$_$tsflower_2f_subst_2f_react.ProviderProps<string>,
    consumerProps: $tsflower_import$_$tsflower_2f_subst_2f_react.ConsumerProps<string>,
    ...
};

var namedExoticComponent: $tsflower_import$_$tsflower_2f_subst_2f_react.NamedExoticComponent<{...}>;

var context2: {
    provider: $tsflower_import$_$tsflower_2f_subst_2f_react.Provider<string>,
    consumer: $tsflower_import$_$tsflower_2f_subst_2f_react.Consumer<string>,
    context: $tsflower_import$_$tsflower_2f_subst_2f_react.Context<string>,
    ...
};

var reactComponent: {
    a: Component<{...}>,
    b: React.Component<{...}>,
    b: React2.Component<{...}>,
    ...
};

declare class ReactComponentTest extends Component2<{...}> {}
declare class ReactComponentTest extends React.Component<{...}> {}
declare class ReactComponentTest extends React2.Component<{...}> {}

type AProps = {
    x: number,
    y: string,
    ...
};

declare class A extends Component<AProps> {}
declare class AA extends React.Component<AProps> {}
declare class AAA extends React2.Component<AProps> {}
var functionComponent0: $tsflower_import$_$tsflower_2f_subst_2f_react.FunctionComponent<>;
var functionComponent1: $tsflower_import$_$tsflower_2f_subst_2f_react.FunctionComponent<{ x: number, ... }>;
var forwardRefExoticComponent: $tsflower_import$_$tsflower_2f_subst_2f_react.ForwardRefExoticComponent<{ x: string, ... } & $tsflower_import$_$tsflower_2f_subst_2f_react.RefAttributes<React.Component<{...}>>>;

var propsWithoutRef1: $tsflower_import$_$tsflower_2f_subst_2f_react.PropsWithoutRef<{
    x: number,
    ref: string,
    ...
}>;

var propsWithoutRef2: $tsflower_import$_$tsflower_2f_subst_2f_react.PropsWithoutRef<{ x: number, ... }>;

var propsWithoutRef3: $tsflower_import$_$tsflower_2f_subst_2f_react.PropsWithoutRef<{
    x: number,
    ref: string,
    ...
} | { y: number, ... }>;

var propsWithChildren: $tsflower_import$_$tsflower_2f_subst_2f_react.PropsWithChildren<{ x: number, ... }>;
var componentProps: { a: $tsflower_import$_$tsflower_2f_subst_2f_react.ComponentProps<A>, ... };
var memoExoticComponent: $tsflower_import$_$tsflower_2f_subst_2f_react.MemoExoticComponent<A>;
var mutableRefObject: $tsflower_import$_$tsflower_2f_subst_2f_react.MutableRefObject<number>;
var event: { mouseEvent: $tsflower_import$_$tsflower_2f_subst_2f_react.MouseEvent<>, ... };
var jsx: { element: $tsflower_import$_$tsflower_2f_subst_2f_react.JSX$Element, ... };
