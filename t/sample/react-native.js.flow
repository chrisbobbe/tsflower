/* @flow
 * @generated by TsFlower
 */
type $tsflower_subst$RN$StyleProp<+T> = null | void | T | false | '' | $ReadOnlyArray<$tsflower_subst$RN$StyleProp<T>>;
import { type ViewStyle as $tsflower_subst$RN$ViewStyle }
  from 'react-native/Libraries/StyleSheet/StyleSheet';
import { type TextStyle as $tsflower_subst$RN$TextStyle }
  from 'react-native/Libraries/StyleSheet/StyleSheet';
import { type ImageStyle as $tsflower_subst$RN$ImageStyle }
  from 'react-native/Libraries/StyleSheet/StyleSheet';
import { type ColorValue as $tsflower_subst$RN$ColorValue }
  from 'react-native/Libraries/StyleSheet/StyleSheet';
import { type PressEvent as $tsflower_subst$RN$GestureResponderEvent }
  from 'react-native/Libraries/Types/CoreEventTypes';
import { type LayoutEvent as $tsflower_subst$RN$LayoutChangeEvent }
  from 'react-native/Libraries/Types/CoreEventTypes';
import { type SyntheticEvent as $tsflower_subst$RN$NativeSyntheticEvent }
  from 'react-native/Libraries/Types/CoreEventTypes';
import { typeof DrawerLayoutAndroid as $tsflower_subst$RN$DrawerLayoutAndroid }
  from 'react-native';
type $tsflower_subst$RN$DrawerLayoutAndroidProps = React$ElementConfig<$tsflower_subst$RN$DrawerLayoutAndroid>;
import { typeof FlatList as $tsflower_subst$RN$FlatList }
  from 'react-native';
type $tsflower_subst$RN$FlatListProps = React$ElementConfig<$tsflower_subst$RN$FlatList>;
import { typeof Pressable as $tsflower_subst$RN$Pressable }
  from 'react-native';
type $tsflower_subst$RN$PressableProps = React$ElementConfig<$tsflower_subst$RN$Pressable>;
import { typeof ScrollView as $tsflower_subst$RN$ScrollView }
  from 'react-native';
type $tsflower_subst$RN$ScrollViewProps = React$ElementConfig<$tsflower_subst$RN$ScrollView>;
import { typeof Switch as $tsflower_subst$RN$Switch }
  from 'react-native';
type $tsflower_subst$RN$SwitchProps = React$ElementConfig<$tsflower_subst$RN$Switch>;
import { typeof TextInput as $tsflower_subst$RN$TextInput }
  from 'react-native';
type $tsflower_subst$RN$TextInputProps = React$ElementConfig<$tsflower_subst$RN$TextInput>;
import { typeof Text as $tsflower_subst$RN$Text }
  from 'react-native';
type $tsflower_subst$RN$TextProps = React$ElementConfig<$tsflower_subst$RN$Text>;
import { typeof TouchableHighlight as $tsflower_subst$RN$TouchableHighlight }
  from 'react-native';
type $tsflower_subst$RN$TouchableHighlightProps = React$ElementConfig<$tsflower_subst$RN$TouchableHighlight>;
import { typeof TouchableNativeFeedback as $tsflower_subst$RN$TouchableNativeFeedback }
  from 'react-native';
type $tsflower_subst$RN$TouchableNativeFeedbackProps = React$ElementConfig<$tsflower_subst$RN$TouchableNativeFeedback>;
import { typeof TouchableOpacity as $tsflower_subst$RN$TouchableOpacity }
  from 'react-native';
type $tsflower_subst$RN$TouchableOpacityProps = React$ElementConfig<$tsflower_subst$RN$TouchableOpacity>;
import { typeof TouchableWithoutFeedback as $tsflower_subst$RN$TouchableWithoutFeedback }
  from 'react-native';
type $tsflower_subst$RN$TouchableWithoutFeedbackProps = React$ElementConfig<$tsflower_subst$RN$TouchableWithoutFeedback>;
import { typeof View as $tsflower_subst$RN$View }
  from 'react-native';
type $tsflower_subst$RN$ViewProps = React$ElementConfig<$tsflower_subst$RN$View>;
import { type StatusBarAnimation as $tsflower_subst$RN$StatusBarAnimation }
  from 'react-native/Libraries/Components/StatusBar/StatusBar';
import "react-native";
import RN from "react-native";

declare var style: {
    normal: $tsflower_subst$RN$StyleProp<$tsflower_subst$RN$ViewStyle>,
    viaDefault: $tsflower_subst$RN$StyleProp<$tsflower_subst$RN$ViewStyle>,
    text: $tsflower_subst$RN$StyleProp<$tsflower_subst$RN$TextStyle>,
    image: $tsflower_subst$RN$StyleProp<$tsflower_subst$RN$ImageStyle>,
    ...
};

declare var color: $tsflower_subst$RN$ColorValue;

declare var events: {
    gesture: $tsflower_subst$RN$GestureResponderEvent,
    layoutChange: $tsflower_subst$RN$LayoutChangeEvent,
    nativeSynthetic: $tsflower_subst$RN$NativeSyntheticEvent<{ x: number, ... }>,
    ...
};

declare var props: {
    drawerLayoutAndroidProps: $tsflower_subst$RN$DrawerLayoutAndroidProps,
    flatListProps: $tsflower_subst$RN$FlatListProps,
    pressableProps: $tsflower_subst$RN$PressableProps,
    scrollViewProps: $tsflower_subst$RN$ScrollViewProps,
    switchProps: $tsflower_subst$RN$SwitchProps,
    textInputProps: $tsflower_subst$RN$TextInputProps,
    textProps: $tsflower_subst$RN$TextProps,
    touchableHighlightProps: $tsflower_subst$RN$TouchableHighlightProps,
    touchableNativeFeedbackProps: $tsflower_subst$RN$TouchableNativeFeedbackProps,
    touchableOpacityProps: $tsflower_subst$RN$TouchableOpacityProps,
    touchableWithoutFeedbackProps: $tsflower_subst$RN$TouchableWithoutFeedbackProps,
    viewProps: $tsflower_subst$RN$ViewProps,
    viewPropsPlus: $tsflower_subst$RN$ViewProps & { foo: string, ... },
    ...
};

declare var components: { statusBar: { animation: $tsflower_subst$RN$StatusBarAnimation, ... }, ... };
