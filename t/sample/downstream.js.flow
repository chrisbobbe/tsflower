/* @flow
 * @generated by TsFlower
 */
import * as upstream from "./upstream";
import { type Num } from "./upstream";
import type { Num as Numm } from "./upstream";
import { x as ux } from "./upstream";
import upstream2 from "./upstream";
import * as upstreamTypeOnly from "./upstream";
import { C as UpC, type C as UpCT } from "./upstream";
import type { C as UpCTT } from "./upstream";
import { Component } from "../imported/upupstream";
export { x, x as uux } from "./upstream";
export { Num } from "./upstream";
export { Num as Nummm } from "./upstream";
export * from "./upstream";
export type NumArray = Array<upstream.Num>;
declare export class C<T> {};
declare export class D extends C<string> {};
declare function ff(x: boolean): void;
export {};
export { ff as fff, C as CC };
