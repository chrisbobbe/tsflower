/* @flow
 * @generated by TsFlower
 */
var readonly: {| a: $ReadOnly<{| a: string |}> |};
var readonlyArray: {| a: $ReadOnlyArray<number> |};

var record: {|
    stringLiteral: $FlowFixMe/*  Record<'a', number> *//* tsflower-unimplemented: Record */,
    numberLiteral: $FlowFixMe/*  Record<1, number> *//* tsflower-unimplemented: Record */,
    string: $FlowFixMe/*  Record<string, number> *//* tsflower-unimplemented: Record */,
    number: $FlowFixMe/*  Record<number, number> *//* tsflower-unimplemented: Record */,
    unionStrings: $FlowFixMe/*  Record<'a' | 'b', number> *//* tsflower-unimplemented: Record */,
    unionNumbers: $FlowFixMe/*  Record<1 | 2 | 3, number> *//* tsflower-unimplemented: Record */,
    unionMixedAtoms: $FlowFixMe/*  Record<'a' | 2, number> *//* tsflower-unimplemented: Record */,
    unionAtomAndCategory: $FlowFixMe/*  Record<'a' | number, number> *//* tsflower-unimplemented: Record */,
    unionCategories: $FlowFixMe/*  Record<string | number, number> *//* tsflower-unimplemented: Record */,
|};

var omit: {|
    a: $Diff<{|
        a: string,
        b: number,
    |}, {| "a": mixed |}>,
    b: $Diff<{|
        a: string,
        b: number,
    |}, {|
        "a": mixed,
        "c": mixed,
    |}>,
    c: $Diff<{|
        a: string,
        b: number,
    |}, {| [key: empty]: mixed |}>,
    d: $Diff<{|
        a: string,
        b: number,
    |}, {|
        "12": mixed,
        "ðŸ˜€": mixed,
    |}>,
|};

declare interface I extends $ReadOnlyArray<string> {}
