#!/usr/bin/env bash

# Note this produces the output, and partially validates it to catch some
# regressions, but currently accepts that there will be Flow errors in the
# output.  For inspecting those, see integration/README.md .

trees=(
  @react-native-masked-view
  @react-navigation
  # react-native-gesture-handler is stubbed out
  react-native-safe-area-context
)

packages=(
  @react-native-masked-view/masked-view
  @react-navigation/{core,routers,native}
  # react-native-gesture-handler is stubbed out
  react-native-safe-area-context
)

git clean -qfxd integration/types/

# TODO: Do all packages as a single run, so the mapper works across them.
for tree in "${trees[@]}"; do
  bin/tsflower tree integration/{node_modules,types}/"${tree}"
done

generated='@'generated

# Make the packages resolvable from each other.
# (Note the `module.name_mapper` setting in the flowconfig.)
for package in "${packages[@]}"; do
  index=integration/types/"${package}"/index.js.flow
  [ -e "${index}" ] && continue
  typeref=$(jq .types -r integration/node_modules/"${package}"/package.json)
  cat >"${index}" <<EOF
/* @flow
 * ${generated}
 */
export * from './${typeref%.d.ts}.js.flow';
EOF
done

# Look for Flow errors of kinds we've eliminated.
# (In particular, syntax errors have empty `.error_codes`.)
#
# Also any in libraries where we've eliminated them.
#
# If any, print them and fail.
if node_modules/.bin/flow integration/ --strip-root --json |
  jq '.errors[] | select(
        (.error_codes | length == 0)
        or (.message[0].path | test("^types/(?:
                react-native-safe-area-context
             )/"; "x")))
      | .message[0] | "integration/\(.path): \(.descr)"' -r -e; then
  false
fi
